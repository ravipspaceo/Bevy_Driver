//
//  Bevy-Prefix.pch
//  Bevy
//
//  Created by CompanyName on 20/12/14.
//  Copyright (c) 2014 CompanyName. All rights reserved.
//

#ifndef Bevy_Bevy_Prefix_pch
#define Bevy_Bevy_Prefix_pch

// Include any system framework and library headers here that should be included in all compilation units.
// You will also need to set the Prefix Header build setting of one or more of your targets to reference this file.

#import "GlobalManager.h"
#import "NPRImageView.h"
#import "TPKeyboardAvoidingScrollView.h"
#import "UIAlertView+Blocks.h"
#import "Validations.h"
#import "UICustomPicker.h"
#import "UIDateTimePicker.h"
#import "MBProgressHUD.h"
#import "WS_Helper.h"
#import "WS_Urls.h"
#import "GlobalUtilityClass.h"




//#define kGoogleAPIKey                       @"AIzaSyCSHwUL3BmN75sluoYVxwPdlQUjjGgQ4i0" // @"AIzaSyDc3vSqCS42qIzpPs5Rff5Va2oVFqCCmMY"//


//New Google API
#define kGoogleAPIKey                       @"AIzaSyCpRn2D5HpKvoPV0fTms__pz0GVMDrureg"



#define LATITUDE                            @"LATITUDE"
#define LONGITUDE                           @"LONGITUDE"
#define EMAIL_ADDRESS                       @"EMAIL_ADDRESS"
#define PASSWORD                            @"PASSWORD"
#define AUTO_LOGIN                          @"AUTO_LOGIN"
#define ORDER_STATUS                          @"ORDER_STATUS"
#define INPROCESS                           @"INPROCESS"
#define DRIVER_ID                           @"DRIVER_ID"
#define STORE_ID                            @"STORE_ID"
#define STORE_NAME                          @"STORE_NAME"
#define STORE_LATITUDE                      @"STORE_NAME"
#define STORE_LONGITUDE                     @"STORE_LONGITUDE"
#define DEVICE_TOKEN                        @"DEVICE_TOKEN"
#define ORDER_STATUS                        @"ORDER_STATUS"
#define DRIVER_ONLINE_STATUS                @"on_duty_status"


#define APPLICATION_SETTINGS                @"APPLICATION_SETTINGS"

#define APP_SETTINGS                        @"app_settings"

#define DRIVER_LOCATION_REFRESH             @"driver_location_refresh"

#define GET_NEAR_BY_STORES_TIME             @"near_by_store_location_refresh_interval"



#define USER_ID                             @"USER_ID"

#define ORDER_ID                            @"ORDER_ID"
#define IROUGHT_ID                          @"IROUGHT_ID"
#define RUNNING_FIRST                       @"RUNNING_FIRST"
#define kDidFailError                       @"Weak signal. Please find better reception."
#define kDidFailBError                          @"We are currently performing maintenance, please come back shortly."

#define kNetworkError                       @"No internet connection, Please try again later."

#define kAppTitle                           @"BevyDriver"

#define IS_IPHONE_5 ( fabs( ( double )[ [ UIScreen mainScreen ] bounds ].size.height - ( double )568 ) < DBL_EPSILON )
#define SYSTEM_VERSION_EQUAL_TO(v)                  ([[[UIDevice currentDevice] systemVersion] compare:v options:NSNumericSearch] == NSOrderedSame)
#define SYSTEM_VERSION_GREATER_THAN(v)              ([[[UIDevice currentDevice] systemVersion] compare:v options:NSNumericSearch] == NSOrderedDescending)
#define SYSTEM_VERSION_GREATER_THAN_OR_EQUAL_TO(v)  ([[[UIDevice currentDevice] systemVersion] compare:v options:NSNumericSearch] != NSOrderedAscending)
#define SYSTEM_VERSION_LESS_THAN(v)                 ([[[UIDevice currentDevice] systemVersion] compare:v options:NSNumericSearch] == NSOrderedAscending)
#define SYSTEM_VERSION_LESS_THAN_OR_EQUAL_TO(v)     ([[[UIDevice currentDevice] systemVersion] compare:v options:NSNumericSearch] != NSOrderedDescending)
#define BasicColor [UIColor colorWithRed:243/255.0 green:127/255.0 blue:33.0/255.0 alpha:1.0];
#define IS_IOS_7                                    SYSTEM_VERSION_GREATER_THAN_OR_EQUAL_TO(@"7.0")
#define APPNAME                                     @"Bevy"

#define IS_IPHONE_6             ([[UIScreen mainScreen] bounds].size.height == 667.0)
#define IS_IPHONE_6_PLUS        ([[UIScreen mainScreen] bounds].size.height == 736.0)

#define IS_IPHONE_4             ([[UIScreen mainScreen] bounds].size.height == 480.0)


#define kDeviceType                 @"iOS"

#define iPhoneType ((UI_USER_INTERFACE_IDIOM() == UIUserInterfaceIdiomPhone)?([[UIScreen mainScreen] bounds].size.height):0)

//Printing NSlog in only Debug mode or while using simulator only

#if !defined(DEBUG) || !(TARGET_IPHONE_SIMULATOR)
#define NSLog(...)
#endif

#endif
